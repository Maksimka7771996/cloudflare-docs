---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { getCollection } from "astro:content";

import Header from "~/components/changelogs/Header.astro";
import ProductPills from "~/components/changelogs/ProductPills.astro";

import { Steps } from "~/components";
import { format } from "date-fns";

const notes = await getCollection("release-notes");

const days = Object.entries(
	Object.groupBy(notes, (note) => note.id.split("/").slice(0, 3).join("/")),
);
---

<StarlightPage
	frontmatter={{ title: "Release notes", tableOfContents: false, template: "splash" }}
	hideTitle={true}
	hideBreadcrumbs={true}
>
	<Header />
	<div class="md:grid md:grid-cols-[10%_90%] justify-self-center">
		{
			days.sort().reverse().map(([date, entries]) => {
				const formatted = format(date, "MMMM dd");

				return (
					<div class="!mt-0">
						<p class="md:leading-none">
							<strong class="text-xs">{formatted}</strong>
							<span class="text-xs">12:00PM</span>
						</p>
					</div>
					<Steps>
						<ol class="!mt-0 max-w-3xl">
							{
								entries?.map(async (entry) => {
									const { Content } = await entry.render();

									return (
										<li>
											<div>
											<a href={`/release-notes/${entry.slug}/`} class="no-underline hover:underline">
												<h3 class="text-[var(--sl-color-text)]">
													{entry.data.title}
												</h3>
											</a>
											<ProductPills products={entry.data.products} />
											</div>
											<p>
												<Content />
											</p>
										</li>
									)
								})
							}
						</ol>
					</Steps>
				)
			})
		}
	</div>
</StarlightPage>

<style>
:root {
	--sl-content-width: 55rem !important;
}

.sl-steps > li::before {
	content: "â€¢" !important;
	font-size: calc(var(--bullet-size) * 2) !important;
	line-height: calc(var(--bullet-size) / 1.5) !important;
	color: var(--sl-color-accent) !important;
}
</style>